# ansible/roles/database/tasks/main.yml
---

- name: Start message
  ansible.builtin.debug:
    msg: 'Create task to install and preparing DB server'

- name: Ensure pip is installed
  ansible.builtin.package:
    name: 
      - python3-pip
      - python3-dev
      - libmysqlclient-dev
      - python3-venv
      - pkg-config
    state: present

- name: Create a virtual environment
  ansible.builtin.command:
    cmd: python3 -m venv /opt/myenv
  args:
    creates: /opt/myenv/bin/activate

- name: Install MySQL client library for Python in virtualenv
  ansible.builtin.shell:
    cmd: /opt/myenv/bin/pip install mysqlclient
  environment:
    PIP_BREAK_SYSTEM_PACKAGES: "1"

- name: Install MariaDB server and Python MySQL client
  ansible.builtin.apt:
    name:
      - mariadb-server
      - python3-mysqldb
    state: present
  tags: mariadb

- name: Enable remote login to MySQL
  ansible.builtin.command: >
    mysql -u root -p{{ root_password }} -e "GRANT ALL PRIVILEGES ON *.* TO '{{ user }}'@'%' IDENTIFIED BY '{{ password }}' WITH GRANT OPTION; FLUSH PRIVILEGES;"
  ignore_errors: yes

- name: Start MariaDB 
  ansible.builtin.service:
    name: mariadb
    state: started
  #ignore_errors: yes

- name: Ensure MySQL/MariaDB service is started and enabled (MariaDB)
  ansible.builtin.service:
    name: mariadb
    state: started
    enabled: yes
  tags: mariadb

- name: Create database
  ansible.builtin.mysql_db:
    name: "{{ db_name }}"
    state: present
    collation: utf8_bin
    encoding: utf8
    login_user: root
    login_password: "{{ root_password }}"

- name: Create database user
  ansible.builtin.mysql_user:
    name: "{{ user }}"
    password: "{{ password }}"
    priv: "{{ db_name }}.*:ALL"
    state: present
    login_user: root
    login_password: "{{ root_password }}"

#- name: Create a Docker volume for MySQL data
#  ansible.builtin.command: docker volume create mysql_data
#  ignore_errors: yes

#- name: Run MySQL container with volume
#  ansible.builtin.command: |
#    docker run --name e -v mysql_data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=rootpassword -e MYSQL_DATABASE=teachua -d mysql:latest
#  ignore_errors: yes

- name: Drop and recreate the database
  ansible.builtin.shell: |
    docker exec database mysql -u user -p{{ password }} -e "DROP DATABASE IF EXISTS teachua; CREATE DATABASE teachua;"
  ignore_errors: yes

- name: Copy data.sql to the container using Ansible's copy module
  ansible.builtin.copy:
    src: /vagrant_data/teachua-backend/data.sql
    dest: /tmp/data.sql

- name: Import data.sql file
  ansible.builtin.shell: >
    mysql -u {{ user }} -p{{ password }} {{ db_name }} < /tmp/data.sql 
  environment:
    MYSQL_PWD: "{{ root_password }}"
  #args:
  #  executable: /bin/bash

- name: Enable remote login to MySQL
  ansible.builtin.lineinfile:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: '^bind-address\s*=\s*127.0.0.1'
    line: 'bind-address = 0.0.0.0'
    backup: yes
  notify:
    - Restart MySQL

- name: Restart MySQL
  ansible.builtin.service:
    name: mariadb
    state: restarted
  
: Restart MySQL


